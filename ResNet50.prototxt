#ResNet50
name: "ResNet50"
layer {
  name: "train-data"
  type: "Data"
  top: "data"
  top: "label"
  transform_param {
    mirror: true
    crop_size: 224
  }
  data_param {
    batch_size: 32
  }
  include { stage: "train" }
}
layer {
  name: "val-data"
  type: "Data"
  top: "data"
  top: "label"
  transform_param {
    mirror: false
    crop_size: 224
  }
  data_param {
    batch_size: 16
  }
  include { stage: "val" }
}
layer {
	bottom: "data"
	top: "conv1"
	name: "conv1"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 64
		kernel_size: 7
		pad: 3
		stride: 2
        weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "conv1"
	top: "conv1_bn"
	name: "bn_conv1"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "conv1_bn"
	top: "conv1_bn"
	name: "conv1_relu"
	type: "ReLU"
}
layer {
	bottom: "conv1_bn"
	top: "pool1"
	name: "pool1"
	type: "Pooling"
	pooling_param {
		kernel_size: 3
		stride: 2
		pool: MAX
	}
}
layer {
	bottom: "pool1"
	top: "res2a_branch1"
	name: "res2a_branch1"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2a_branch1"
	top: "res2a_branch1_bn"
	name: "bn2a_branch1"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "pool1"
	top: "res2a_branch2a"
	name: "res2a_branch2a"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2a_branch2a"
	top: "res2a_branch2a_bn"
	name: "bn2a_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2a_branch2a_bn"
	top: "res2a_branch2a_bn"
	name: "res2a_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res2a_branch2a_bn"
	top: "res2a_branch2b"
	name: "res2a_branch2b"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2a_branch2b"
	top: "res2a_branch2b_bn"
	name: "bn2a_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2a_branch2b_bn"
	top: "res2a_branch2b_bn"
	name: "res2a_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res2a_branch2b_bn"
	top: "res2a_branch2c"
	name: "res2a_branch2c"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    	}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2a_branch2c"
	top: "res2a_branch2c_bn"
	name: "bn2a_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2a_branch1_bn"
	bottom: "res2a_branch2c_bn"
	top: "res2a"
	name: "res2a"
	type: "Eltwise"
}
layer {
	bottom: "res2a"
	top: "res2a"
	name: "res2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res2a"
	top: "res2b_branch2a"
	name: "res2b_branch2a"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2b_branch2a"
	top: "res2b_branch2a_bn"
	name: "bn2b_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2b_branch2a_bn"
	top: "res2b_branch2a_bn"
	name: "res2b_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res2b_branch2a_bn"
	top: "res2b_branch2b"
	name: "res2b_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2b_branch2b"
	top: "res2b_branch2b_bn"
	name: "bn2b_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2b_branch2b_bn"
	top: "res2b_branch2b_bn"
	name: "res2b_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res2b_branch2b_bn"
	top: "res2b_branch2c"
	name: "res2b_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2b_branch2c"
	top: "res2b_branch2c_bn"
	name: "bn2b_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2a"
	bottom: "res2b_branch2c_bn"
	top: "res2b"
	name: "res2b"
	type: "Eltwise"
}
layer {
	bottom: "res2b"
	top: "res2b"
	name: "res2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res2b"
	top: "res2c_branch2a"
	name: "res2c_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 64
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2c_branch2a"
	top: "res2c_branch2a_bn"
	name: "bn2c_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2c_branch2a_bn"
	top: "res2c_branch2a_bn"
	name: "res2c_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res2c_branch2a_bn"
	top: "res2c_branch2b"
	name: "res2c_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 64
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2c_branch2b"
	top: "res2c_branch2b_bn"
	name: "bn2c_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2c_branch2b_bn"
	top: "res2c_branch2b_bn"
	name: "res2c_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res2c_branch2b_bn"
	top: "res2c_branch2c"
	name: "res2c_branch2c"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res2c_branch2c"
	top: "res2c_branch2c_bn"
	name: "bn2c_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2b"
	bottom: "res2c_branch2c_bn"
	top: "res2c"
	name: "res2c"
	type: "Eltwise"
}
layer {
	bottom: "res2c"
	top: "res2c"
	name: "res2c_relu"
	type: "ReLU"
}
layer {
	bottom: "res2c"
	top: "res3a_branch1"
	name: "res3a_branch1"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 2
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3a_branch1"
	top: "res3a_branch1_bn"
	name: "bn3a_branch1"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res2c"
	top: "res3a_branch2a"
	name: "res3a_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 2
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3a_branch2a"
	top: "res3a_branch2a_bn"
	name: "bn3a_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3a_branch2a_bn"
	top: "res3a_branch2a_bn"
	name: "res3a_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res3a_branch2a_bn"
	top: "res3a_branch2b"
	name: "res3a_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3a_branch2b"
	top: "res3a_branch2b_bn"
	name: "bn3a_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3a_branch2b_bn"
	top: "res3a_branch2b_bn"
	name: "res3a_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res3a_branch2b_bn"
	top: "res3a_branch2c"
	name: "res3a_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    	}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3a_branch2c"
	top: "res3a_branch2c_bn"
	name: "bn3a_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3a_branch1_bn"
	bottom: "res3a_branch2c_bn"
	top: "res3a"
	name: "res3a"
	type: "Eltwise"
}
layer {
	bottom: "res3a"
	top: "res3a"
	name: "res3a_relu"
	type: "ReLU"
}
layer {
	bottom: "res3a"
	top: "res3b_branch2a"
	name: "res3b_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3b_branch2a"
	top: "res3b_branch2a_bn"
	name: "bn3b_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3b_branch2a_bn"
	top: "res3b_branch2a_bn"
	name: "res3b_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res3b_branch2a_bn"
	top: "res3b_branch2b"
	name: "res3b_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3b_branch2b"
	top: "res3b_branch2b_bn"
	name: "bn3b_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3b_branch2b_bn"
	top: "res3b_branch2b_bn"
	name: "res3b_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res3b_branch2b_bn"
	top: "res3b_branch2c"
	name: "res3b_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    	}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3b_branch2c"
	top: "res3b_branch2c_bn"
	name: "bn3b_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3a"
	bottom: "res3b_branch2c_bn"
	top: "res3b"
	name: "res3b"
	type: "Eltwise"
}
layer {
	bottom: "res3b"
	top: "res3b"
	name: "res3b_relu"
	type: "ReLU"
}
layer {
	bottom: "res3b"
	top: "res3c_branch2a"
	name: "res3c_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}	
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3c_branch2a"
	top: "res3c_branch2a_bn"
	name: "bn3c_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3c_branch2a_bn"
	top: "res3c_branch2a_bn"
	name: "res3c_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res3c_branch2a_bn"
	top: "res3c_branch2b"
	name: "res3c_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    	}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3c_branch2b"
	top: "res3c_branch2b_bn"
	name: "bn3c_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3c_branch2b_bn"
	top: "res3c_branch2b_bn"
	name: "res3c_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res3c_branch2b_bn"
	top: "res3c_branch2c"
	name: "res3c_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3c_branch2c"
	top: "res3c_branch2c_bn"
	name: "bn3c_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3b"
	bottom: "res3c_branch2c_bn"
	top: "res3c"
	name: "res3c"
	type: "Eltwise"
}
layer {
	bottom: "res3c"
	top: "res3c"
	name: "res3c_relu"
	type: "ReLU"
}
layer {
	bottom: "res3c"
	top: "res3d_branch2a"
	name: "res3d_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 128
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3d_branch2a"
	top: "res3d_branch2a_bn"
	name: "bn3d_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3d_branch2a_bn"
	top: "res3d_branch2a_bn"
	name: "res3d_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res3d_branch2a_bn"
	top: "res3d_branch2b"
	name: "res3d_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 128
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3d_branch2b"
	top: "res3d_branch2b_bn"
	name: "bn3d_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3d_branch2b_bn"
	top: "res3d_branch2b_bn"
	name: "res3d_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res3d_branch2b_bn"
	top: "res3d_branch2c"
	name: "res3d_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res3d_branch2c"
	top: "res3d_branch2c_bn"
	name: "bn3d_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3c"
	bottom: "res3d_branch2c_bn"
	top: "res3d"
	name: "res3d"
	type: "Eltwise"
}
layer {
	bottom: "res3d"
	top: "res3d"
	name: "res3d_relu"
	type: "ReLU"
}
layer {
	bottom: "res3d"
	top: "res4a_branch1"
	name: "res4a_branch1"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 2
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4a_branch1"
	top: "res4a_branch1_bn"
	name: "bn4a_branch1"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res3d"
	top: "res4a_branch2a"
	name: "res4a_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 2
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4a_branch2a"
	top: "res4a_branch2a_bn"
	name: "bn4a_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4a_branch2a_bn"
	top: "res4a_branch2a_bn"
	name: "res4a_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res4a_branch2a_bn"
	top: "res4a_branch2b"
	name: "res4a_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4a_branch2b"
	top: "res4a_branch2b_bn"
	name: "bn4a_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4a_branch2b_bn"
	top: "res4a_branch2b_bn"
	name: "res4a_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res4a_branch2b_bn"
	top: "res4a_branch2c"
	name: "res4a_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4a_branch2c"
	top: "res4a_branch2c_bn"
	name: "bn4a_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4a_branch1_bn"
	bottom: "res4a_branch2c_bn"
	top: "res4a"
	name: "res4a"
	type: "Eltwise"
}
layer {
	bottom: "res4a"
	top: "res4a"
	name: "res4a_relu"
	type: "ReLU"
}

layer {
	bottom: "res4a"
	top: "res4b_branch2a"
	name: "res4b_branch2a"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4b_branch2a"
	top: "res4b_branch2a_bn"
	name: "bn4b_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4b_branch2a_bn"
	top: "res4b_branch2a_bn"
	name: "res4b_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res4b_branch2a_bn"
	top: "res4b_branch2b"
	name: "res4b_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4b_branch2b"
	top: "res4b_branch2b_bn"
	name: "bn4b_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4b_branch2b_bn"
	top: "res4b_branch2b_bn"
	name: "res4b_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res4b_branch2b_bn"
	top: "res4b_branch2c"
	name: "res4b_branch2c"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4b_branch2c"
	top: "res4b_branch2c_bn"
	name: "bn4b_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4a"
	bottom: "res4b_branch2c_bn"
	top: "res4b"
	name: "res4b"
	type: "Eltwise"
}
layer {
	bottom: "res4b"
	top: "res4b"
	name: "res4b_relu"
	type: "ReLU"
}
layer {
	bottom: "res4b"
	top: "res4c_branch2a"
	name: "res4c_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    	}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4c_branch2a"
	top: "res4c_branch2a_bn"
	name: "bn4c_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4c_branch2a_bn"
	top: "res4c_branch2a_bn"
	name: "res4c_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res4c_branch2a_bn"
	top: "res4c_branch2b"
	name: "res4c_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4c_branch2b"
	top: "res4c_branch2b_bn"
	name: "bn4c_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4c_branch2b_bn"
	top: "res4c_branch2b_bn"
	name: "res4c_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res4c_branch2b_bn"
	top: "res4c_branch2c"
	name: "res4c_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4c_branch2c"
	top: "res4c_branch2c_bn"
	name: "bn4c_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4b"
	bottom: "res4c_branch2c_bn"
	top: "res4c"
	name: "res4c"
	type: "Eltwise"
}
layer {
	bottom: "res4c"
	top: "res4c"
	name: "res4c_relu"
	type: "ReLU"
}
layer {
	bottom: "res4c"
	top: "res4d_branch2a"
	name: "res4d_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4d_branch2a"
	top: "res4d_branch2a_bn"
	name: "bn4d_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4d_branch2a_bn"
	top: "res4d_branch2a_bn"
	name: "res4d_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res4d_branch2a_bn"
	top: "res4d_branch2b"
	name: "res4d_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4d_branch2b"
	top: "res4d_branch2b_bn"
	name: "bn4d_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4d_branch2b_bn"
	top: "res4d_branch2b_bn"
	name: "res4d_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res4d_branch2b_bn"
	top: "res4d_branch2c"
	name: "res4d_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4d_branch2c"
	top: "res4d_branch2c_bn"
	name: "bn4d_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4c"
	bottom: "res4d_branch2c_bn"
	top: "res4d"
	name: "res4d"
	type: "Eltwise"
}
layer {
	bottom: "res4d"
	top: "res4d"
	name: "res4d_relu"
	type: "ReLU"
}
layer {
	bottom: "res4d"
	top: "res4e_branch2a"
	name: "res4e_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4e_branch2a"
	top: "res4e_branch2a_bn"
	name: "bn4e_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4e_branch2a_bn"
	top: "res4e_branch2a_bn"
	name: "res4e_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res4e_branch2a_bn"
	top: "res4e_branch2b"
	name: "res4e_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4e_branch2b"
	top: "res4e_branch2b_bn"
	name: "bn4e_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4e_branch2b_bn"
	top: "res4e_branch2b_bn"
	name: "res4e_branch2b_relu"
	type: "ReLU"
}

layer {
	bottom: "res4e_branch2b_bn"
	top: "res4e_branch2c"
	name: "res4e_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4e_branch2c"
	top: "res4e_branch2c_bn"
	name: "bn4e_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}	
	}
}
layer {
	bottom: "res4d"
	bottom: "res4e_branch2c_bn"
	top: "res4e"
	name: "res4e"
	type: "Eltwise"
}
layer {
	bottom: "res4e"
	top: "res4e"
	name: "res4e_relu"
	type: "ReLU"
}
layer {
	bottom: "res4e"
	top: "res4f_branch2a"
	name: "res4f_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4f_branch2a"
	top: "res4f_branch2a_bn"
	name: "bn4f_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4f_branch2a_bn"
	top: "res4f_branch2a_bn"
	name: "res4f_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res4f_branch2a_bn"
	top: "res4f_branch2b"
	name: "res4f_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 256
		kernel_size: 3
		pad: 1
		stride: 1
		weight_filler {
      		type: "msra"
      		std: 0.0005
    	}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4f_branch2b"
	top: "res4f_branch2b_bn"
	name: "bn4f_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4f_branch2b_bn"
	top: "res4f_branch2b_bn"
	name: "res4f_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res4f_branch2b_bn"
	top: "res4f_branch2c"
	name: "res4f_branch2c"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 1024
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    	}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res4f_branch2c"
	top: "res4f_branch2c_bn"
	name: "bn4f_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    	}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4e"
	bottom: "res4f_branch2c_bn"
	top: "res4f"
	name: "res4f"
	type: "Eltwise"
}
layer {
	bottom: "res4f"
	top: "res4f"
	name: "res4f_relu"
	type: "ReLU"
}
layer {
	bottom: "res4f"
	top: "res5a_branch1"
	name: "res5a_branch1"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 2
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5a_branch1"
	top: "res5a_branch1_bn"
	name: "bn5a_branch1"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res4f"
	top: "res5a_branch2a"
	name: "res5a_branch2a"
	type: "Convolution"
    param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 2
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5a_branch2a"
	top: "res5a_branch2a_bn"
	name: "bn5a_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5a_branch2a_bn"
	top: "res5a_branch2a_bn"
	name: "res5a_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res5a_branch2a_bn"
	top: "res5a_branch2b"
	name: "res5a_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5a_branch2b"
	top: "res5a_branch2b_bn"
	name: "bn5a_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5a_branch2b_bn"
	top: "res5a_branch2b_bn"
	name: "res5a_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res5a_branch2b_bn"
	top: "res5a_branch2c"
	name: "res5a_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5a_branch2c"
	top: "res5a_branch2c_bn"
	name: "bn5a_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5a_branch1_bn"
	bottom: "res5a_branch2c_bn"
	top: "res5a"
	name: "res5a"
	type: "Eltwise"
}
layer {
	bottom: "res5a"
	top: "res5a"
	name: "res5a_relu"
	type: "ReLU"
}
layer {
	bottom: "res5a"
	top: "res5b_branch2a"
	name: "res5b_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5b_branch2a"
	top: "res5b_branch2a_bn"
	name: "bn5b_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5b_branch2a_bn"
	top: "res5b_branch2a_bn"
	name: "res5b_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res5b_branch2a_bn"
	top: "res5b_branch2b"
	name: "res5b_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5b_branch2b"
	top: "res5b_branch2b_bn"
	name: "bn5b_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5b_branch2b_bn"
	top: "res5b_branch2b_bn"
	name: "res5b_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res5b_branch2b_bn"
	top: "res5b_branch2c"
	name: "res5b_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5b_branch2c"
	top: "res5b_branch2c_bn"
	name: "bn5b_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5a"
	bottom: "res5b_branch2c_bn"
	top: "res5b"
	name: "res5b"
	type: "Eltwise"
}
layer {
	bottom: "res5b"
	top: "res5b"
	name: "res5b_relu"
	type: "ReLU"
}
layer {
	bottom: "res5b"
	top: "res5c_branch2a"
	name: "res5c_branch2a"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
	    	}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5c_branch2a"
	top: "res5c_branch2a_bn"
	name: "bn5c_branch2a"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5c_branch2a_bn"
	top: "res5c_branch2a_bn"
	name: "res5c_branch2a_relu"
	type: "ReLU"
}
layer {
	bottom: "res5c_branch2a_bn"
	top: "res5c_branch2b"
	name: "res5c_branch2b"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 512
		kernel_size: 3
		pad: 1
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5c_branch2b"
	top: "res5c_branch2b_bn"
	name: "bn5c_branch2b"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5c_branch2b_bn"
	top: "res5c_branch2b_bn"
	name: "res5c_branch2b_relu"
	type: "ReLU"
}
layer {
	bottom: "res5c_branch2b_bn"
	top: "res5c_branch2c"
	name: "res5c_branch2c"
	type: "Convolution"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
	}
	convolution_param {
		num_output: 2048
		kernel_size: 1
		pad: 0
		stride: 1
	weight_filler {
      		type: "msra"
      		std: 0.0005
    		}
    	bias_filler {
      		type: "constant"
      		value: 0.1
		}
	}
}
layer {
	bottom: "res5c_branch2c"
	top: "res5c_branch2c_bn"
	name: "bn5c_branch2c"
	type: "BatchNorm"
	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	param {
    	lr_mult: 1
    	decay_mult: 0
  	}
  	batch_norm_param {
    	scale_filler {
      		type: "constant"
      		value: 1
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}
	}
}
layer {
	bottom: "res5b"
	bottom: "res5c_branch2c_bn"
	top: "res5c"
	name: "res5c"
	type: "Eltwise"
}
layer {
	bottom: "res5c"
	top: "res5c"
	name: "res5c_relu"
	type: "ReLU"
}
layer {
	bottom: "res5c"
	top: "pool2"
	name: "pool2"
	type: "Pooling"
	pooling_param {
		kernel_size: 7
		stride: 1
		pool: AVE
	}
}
layer {
	bottom: "pool2"
	top: "fclayer"
	name: "fclayer"
	type: "InnerProduct"
    	param {
    	lr_mult: 1
    	decay_mult: 1
  	}
  	param {
    	lr_mult: 2
    	decay_mult: 0
  	}
	inner_product_param {
	weight_filler {
      		type: "msra"
    		}
    	bias_filler {
      		type: "constant"
      		value: 0
    		}	
	}
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "fclayer"
  bottom: "label"
  top: "accuracy"
  include { stage: "val" }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fclayer"
  bottom: "label"
  top: "loss"
  exclude { stage: "deploy" }
}
layer {
  name: "softmax"
  type: "Softmax"
  bottom: "fclayer"
  top: "softmax"
  include { stage: "deploy" }
}
